version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: fastify-postgres-prod
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-fastify_prisma_db}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5434:5432"
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
    networks:
      - fastify-prod-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Fastify Application (Production)
  app:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: fastify-app-prod
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DATABASE_URL: ${DATABASE_URL}
      PORT: 3000
    ports:
      - "3002:3000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - fastify-prod-network
    volumes:
      - ./logs:/app/logs
    command: sh -c "sleep 20 && npx prisma migrate deploy && pm2-runtime start ecosystem.config.js --env production"
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

volumes:
  postgres_prod_data:

networks:
  fastify-prod-network:
    driver: bridge

